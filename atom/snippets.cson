# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'.source.js':
  'Console log':
    'prefix': 'con'
    'body': "console.log(${1:''});$2"
  'beforeEach':
    'prefix': 'bef'
    'body':'''
      beforeEach(() => {
        $1
      });$2
    '''
  'describe':
    'prefix': 'desc'
    'body':'''
      describe('${1:The thing described}', () => {
        ${2://body of the suite/context}
      });$3
    '''
  'it':
    'prefix': 'it'
    'body':'''
      it('${1:The test description}', () => {
        ${2://body of the test}
      });$3
    '''
  'spyOn':
    'prefix': 'spyOn'
    'body': "spyOn(${1:window}, '${2:functionName}');"
'.source.ruby':
  'Pry':
    'prefix': 'pry'
    'body': 'require "pry"; binding.pry'
  'do..end':
    'prefix': 'do'
    'body': '''
      do${1: |${2:param}|}
        $3
      end$4
    '''
  'context':
    'prefix': 'con'
    'body': '''
      context '$1' do
        $2
      end$3
    '''
  'before':
    'prefix': 'bef'
    'body': '''
      before do
        $1
      end
    '''
  'describe':
    'prefix': 'desc'
    'body': '''
      describe '$1' do
        $2
      end$3
    '''
  'it':
    'prefix': 'it'
    'body': '''
      it '$1' do
        $2
      end$3
    '''
  'it renders a template':
    'prefix': 'itr'
    'body': '''
      it { is_expected.to render_template ${1::show} }$0
    '''
  'it has an http status':
    'prefix': 'ith'
    'body': '''
      it { is_expected.to have_http_status ${1::ok} }$0
    '''
  'let':
    'prefix': 'let'
    'body': '''
      let(:$1) { $2 }$3
    '''
  'let params':
    'prefix': 'letp'
    'body': '''
      let(:params) { { $1 } }$0
    '''
  'FactoryBot.create_list':
    'prefix': 'fbcl'
    'body': '''
      FactoryBot.create_list(:${1:model_name}, ${2:2})$0
    '''
  'FactoryBot.create':
    'prefix': 'fbcr'
    'body': '''
      FactoryBot.create(:${1:model_name})$0
    '''
'.source.python':
  'Interact':
    'prefix': 'interact'
    'body': 'import code; code.interact(local=locals())'
  'Pry':
    'prefix': 'pry'
    'body': 'from IPython import embed; embed()'
"*":
  test:
    prefix: "foo"
    body: """
    - CLIPBOARD: $CLIPBOARD
    - TM_SELECTED_TEXT: $TM_SELECTED_TEXT
    - TM_CURRENT_LINE: $TM_CURRENT_LINE
    - TM_CURRENT_WORD: $TM_CURRENT_WORD
    - TM_LINE_INDEX: $TM_LINE_INDEX
    - TM_LINE_NUMBER: $TM_LINE_NUMBER
    - TM_FILENAME: $TM_FILENAME
    - TM_FILENAME_BASE: $TM_FILENAME_BASE
    - TM_DIRECTORY: $TM_DIRECTORY
    - TM_FILEPATH: $TM_FILEPATH

    - CURRENT_YEAR: $CURRENT_YEAR
    - CURRENT_YEAR_SHORT: $CURRENT_YEAR_SHORT
    - CURRENT_MONTH: $CURRENT_MONTH
    - CURRENT_MONTH_NAME: $CURRENT_MONTH_NAME
    - CURRENT_MONTH_NAME_SHORT: $CURRENT_MONTH_NAME_SHORT
    - CURRENT_DATE: $CURRENT_DATE
    - CURRENT_DAY_NAME: $CURRENT_DAY_NAME
    - CURRENT_DAY_NAME_SHORT: $CURRENT_DAY_NAME_SHORT
    - CURRENT_HOUR: $CURRENT_HOUR
    - CURRENT_MINUTE: $CURRENT_MINUTE
    - CURRENT_SECOND: $CURRENT_SECOND

    - BLOCK_COMMENT_START: $BLOCK_COMMENT_START
    - BLOCK_COMMENT_END: $BLOCK_COMMENT_END
    - LINE_COMMENT: $LINE_COMMENT
    """
