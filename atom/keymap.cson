# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'atom-text-editor':
  'ctrl-l': 'vim-mode-plus:redraw-cursor-line-at-upper-middle'
  'ctrl-c': 'core:copy'

'atom-text-editor.vim-mode-plus.insert-mode:not(.mini)':
  'j k': 'vim-mode-plus:activate-normal-mode'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'space space': 'command-palette:toggle'
  'space c l': 'editor:toggle-line-comments'
  'space r i t': 'termination:insert-selected-text' # run in terminal
  'space t d': 'termination:close'
  'space t n': 'termination:new' # terminal new

'atom-text-editor.vim-mode-plus.normal-mode':
  # leader commands, by starting letter
  'space b b': 'fuzzy-finder:toggle-buffer-finder'
  'space b n': 'pane:show-next-item'
  'space b p': 'pane:show-previous-item'
  'space b d': 'buffer:delete-buffer'
  'space b D': 'tabs:close-all-tabs' # buffer Delete all
  'space f a': 'atom-spec-finder:toggle' # find alternate file (spec or thing it describes)
  'space f e d': 'application:open-your-init-script'
  'space f e k': 'application:open-your-keymap'
  'space f e s': 'application:open-your-stylesheet'
  'space f f': 'editor:toggle-current-row-folding'
  'space f o': 'advanced-open-file:toggle'
  'space f s': 'core:save'
  'space f t': 'atom-spec-finder:toggle' # find test file (or go back from test to code)
  'space f 0': 'editor:unfold-all'
  'space f 1': 'editor:fold-at-indent-level-1'
  'space f 2': 'editor:fold-at-indent-level-2'
  'space f 3': 'editor:fold-at-indent-level-3'
  'space f 4': 'editor:fold-at-indent-level-4'
  'space g b': 'git-blame:toggle'
  'space g c j': 'git-plus:add-all-and-commit'
  'space g d': 'inline-git-diff:toggle'
  'space g f': 'github:pull'
  'space g l c': 'git-links:copy-absolute-link-for-current-commit'
  'space g l f': 'git-links:copy-absolute-link-for-current-file'
  'space g l l': 'git-links:copy-absolute-link-for-current-line'
  'space g p': 'github:push'
  'space g s': 'github:toggle-git-tab-focus'
  'space j f': 'symbols-view:toggle-file-symbols' # jump to symbol in file
  'space j j': 'symbols-view:toggle-project_symbols' # jump to any symbol
  'space l s': 'editor:log-cursor-scope'
  'space p s': 'application:reopen-project' # projects - switch
  'space q a': 'tabs:close-all-tabs'
  'space q q': 'application:quit'
  'space q o': 'pane:close-other-items' # quit other tabs
  'space q w': 'window:close'
  'space r f': 'run:file'
  'space r r': 'custom:run-rspec-for-line'
  'space s r': 'pane:split-right-and-move-active-item'
  'space t a': 'rspec:run-all'
  'space t c': 'rspec:run-for-line' # run the current spec
  'space t f': 'rspec:run' # run the current file
  'space T I': 'settings:toggle-vcs-ignored'
  'space T F': 'hey-pane:toggle-focus-of-active-pane'
  'space T G': 'custom:toggle-golden-ratio'
  'space v': 'expand-region:expand'
  'space w l': 'window:focus-pane-on-right'
  'space w h': 'window:focus-pane-on-left'
  'space w n': 'window:focus-next-pane'
  'space w N': 'application:new-window'
  'space w p': 'window:focus-previous-pane'
  'space w r': 'window:reload'
  'space w w': 'window:focus-next-pane'
  'space w 1': 'window:close-other-windows'

  'c c': 'vim-mode-plus:substitute-line'
  's': 'vim-mode-plus:surround-smart-word'
  ';': 'ex-mode:open' # shortcut for : (so you don't have to type shift)
  'K': 'editor:newline' # mirrors J in vim mode, since there's no help yet
  'F': 'editor:toggle-current-row-folding'

  'tab': 'pane:show-next-item'
  'shift-tab': 'pane:show-previous-item'

'atom-text-editor.vim-mode-plus.visual-mode':
  'v': 'expand-region:expand'
  'V': 'expand-region:shrink'
  '/': 'project-find:show'
  'ctrl-shift-l': 'editor:split-selections-into-lines'

'atom-text-editor.vim-mode-plus.normal-mode.has-inline-git-diff':
  'space g c': 'inline-git-diff:copy-removed-text'
  'r': 'inline-git-diff:revert'

'atom-workspace':
  'ctrl-alt-cmd-i': 'settings:toggle-vcs-ignored'
  'ctrl-p': 'fuzzy-finder:toggle-file-finder'
  'ctrl-b': 'symbols-view:go-to-declaration'
  'ctrl-~': 'terminal:open'

'.platform-darwin':
  'cmd-b': 'symbols-view:go-to-declaration'
  'cmd-k right': 'pane:split-right-moving-current-tab'
  'ctrl-n': 'tree-view:toggle-focus'

'.tree-view':
  'n': 'tree-view:add-file'

'.github-StagingView':
  'c': 'core:focus-next' # commit
  'd': 'github:discard-changes-in-selected-files'
  'D': 'github:discard-all-changes'
  'j': 'core:move-down'
  'k': 'core:move-up'
  'o': 'github:open-file'
  's': 'core:confirm' # stage/unstage
  'S': 'github:stage-all-changes'
  'u': 'core:undo'
  'U': 'github:unstage-all-changes'
  'q': 'github:toggle-git-tab'

'atom-text-editor:not(.mini).vim-mode-plus:not(.insert-mode):not(.jumpy-jump-mode), .tree-view':
    'f': 'jumpy:toggle'
